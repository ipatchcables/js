const name1 = {
  name: "Billy",
  age: 16,
  sayName: function(){
  console.log(`My name is ${this.name}`)
},
}

const name2 = Object.create(name1);
name2.sayName();

function Animal(name, age, breed) {
  const obj = {}
  obj.name = name; // or use this.
  obj.age = age;/// this.name
  obj.breed = breed; //this.breed
  return obj;
  
}
Animal.prototype.makeNoise = function (){
  console.log(`Generic animal noise`);
}


const dog1 = new Animal("Spike", 3, "Lab");
console.log(dog1.name)
//dog1 inherist from animal which inherits from protoytype objhetct



function Dog(name, age, breed){ //Instantiates and objerct that iherits Animal
  Animal.call(this, name, age);
  this.breed = breed;
}

const barly = new Dog("Barly", 1, "Poo");
console.log(Dog.prototype.constructor);
console.log(Dog.prototype);

function Cat(name,age,color) {
  Animal.call(this,name,age);
  this.coloration = color;
}
Cat.prototype = Object.create(Animal.prototype)
Cat.prototype.constructor = Cat;
Cat.prototype.scratchPost = function () {
  console.log("Scracth post");
}

function Kitten(name, age, color, litter){
  Cat.call(this, name, age, color); 
  this.litter = litter;
}

const tinykitty = new Kitten("spot", 2, "red", 1);
console.log(tinykitty instanceof Kitten); //Boolean to check instance
